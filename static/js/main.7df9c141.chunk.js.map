{"version":3,"sources":["components/AddTodo.js","components/layout/header.js","components/TodoItem.js","components/Todos.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["AddTodo","state","title","onChange","e","setState","target","name","value","onSubmit","preventDefault","props","addTodo","fxflex","fxlayout","fxlayoutalign","this","type","placeholder","style","inputAdd","className","Component","width","maxWidth","overflow","boxShadow","padding","margin","borderRadius","border","headerStyle","background","color","textAlign","top","LinkStyle","Header","to","TodoItem","display","justifyContent","textDecoration","todo","completed","id","listItem","markComplete","bind","getStyle","onClick","deleteTodo","flexDirection","alignItems","Todos","todos","map","key","About","Fragment","App","axios","delete","then","res","filter","post","data","get","AppStyle","exact","path","render","component","React","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7df9c141.chunk.js","sourcesContent":["    import React, { Component } from 'react'\r\n    import propTypes from 'prop-types';\r\n    import { BsFillPlusSquareFill } from \"react-icons/bs\";\r\n\r\n    export class AddTodo extends Component {\r\n\r\n        state={\r\n            title:'',\r\n        }\r\n\r\n      onChange =(e)=>{\r\n          this.setState({\r\n             [e.target.name]: e.target.value\r\n          })\r\n      }\r\n      \r\n      onSubmit=(e)=>{\r\n          e.preventDefault();\r\n          this.props.addTodo(this.state.title);\r\n          this.setState({\r\n              title: ''\r\n          })\r\n      }\r\n      \r\n      render() {\r\n        return (\r\n          <div fxflex=\"\" fxlayout=\"row\" fxlayoutalign=\"start center\" > \r\n            <form onSubmit={this.onSubmit} >\r\n                <input type=\"text\" placeholder=\"Add To do ...\" name=\"title\"\r\n                value={this.state.title} onChange={this.onChange} style={ inputAdd }/>\r\n            \r\n                <button className=\"btn\" type=\"submit\"><BsFillPlusSquareFill/></button>\r\n            </form>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n\r\n    AddTodo.propTypes= {\r\n      addTodo: propTypes.func.isRequired\r\n    }\r\n    \r\n\r\n    const inputAdd={\r\n      width: '100%',\r\n      maxWidth: '400px',\r\n      overflow: 'hidden',\r\n      boxShadow: '0 2px 1px -1px rgba(0,0,0,.2), 0 1px 1px 0 rgba(0,0,0,.14), 0 1px 3px 0 rgba(0,0,0,.12)',\r\n      padding:'12px',\r\n      margin:'12px',\r\n      borderRadius:'40px',\r\n      border:'0px'\r\n    }\r\n    export default AddTodo\r\n    ","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Header(){\r\n\r\n    return (\r\n        <header style={headerStyle}>\r\n            <h1> To Do List</h1>\r\n            <ul>\r\n                <li className=\"ListItem\">\r\n                    <Link style={LinkStyle} to=\"/\" >Home </Link>\r\n                </li>\r\n                <li className=\"ListItem\">\r\n                    <Link style={LinkStyle} to=\"/about\" > About </Link>\r\n                </li>\r\n            </ul>\r\n        </header>\r\n    )\r\n}\r\n\r\nconst headerStyle ={\r\n    background:'#333',\r\n    color:'#fff',\r\n    textAlign: 'Ã§enter',\r\n    top:'0',\r\n}\r\n\r\n\r\nconst LinkStyle = {\r\n    color : '#fff',\r\n\r\n}\r\nexport default Header","import React, { Component } from 'react';\r\nimport propTypes from 'prop-types';\r\nimport {BsFillXOctagonFill} from \"react-icons/bs\";\r\n\r\n\r\n\r\n\r\nclass TodoItem extends Component{\r\n\r\n    getStyle(){\r\n        return {\r\n            display:'flex',\r\n            justifyContent:'flex-start',    \r\n            padding:'5px ',\r\n            width:'inherit',\r\n            textDecoration: this.props.todo.completed ? 'line-through':'none'}\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        // destructring \r\n        const {id, title}=this.props.todo;\r\n\r\n        return (\r\n            <div fxflex=\"\" fxlayout=\"row\" fxlayoutalign=\"start center\" > \r\n         \r\n            <div style={listItem}>\r\n            \r\n           <input type=\"checkbox\" \r\n           onChange={this.props.markComplete.bind(this, id)} /> { ' '} \r\n           <p style={this.getStyle()}>{title}</p>\r\n           <button className=\"btn\" onClick={this.props.deleteTodo.bind(this, id)} >\r\n                <BsFillXOctagonFill />\r\n                </button>\r\n            </div>\r\n            </div>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\n// PropType\r\n\r\nTodoItem.propTypes={\r\n    todo: propTypes.object.isRequired,\r\n    markComplete:propTypes.func.isRequired,\r\n    deleteTodo: propTypes.func.isRequired\r\n}\r\n\r\nconst row = {\r\n    display:'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '100%'\r\n}\r\n\r\nconst listItem={\r\n    width: '100%',\r\n      maxWidth: '480px',\r\n      overflow: 'hidden',\r\n      boxShadow: '0 2px 1px -1px rgba(0,0,0,.2), 0 1px 1px 0 rgba(0,0,0,.14), 0 1px 3px 0 rgba(0,0,0,.12)',\r\n      padding:'12px',\r\n      margin:'12px auto',\r\n      flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent:'space-between',\r\n    display:'flex'\r\n}\r\n\r\n\r\n\r\nexport default TodoItem ;","import React , {Component} from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport propTypes from 'prop-types';\r\n\r\nclass Todos extends Component{\r\n\r\n    render(){\r\n        return this.props.todos.map((todo)=>(\r\n            <TodoItem  todo={todo} key ={todo.id} \r\n            markComplete={this.props.markComplete} deleteTodo={this.props.deleteTodo} />\r\n        ))\r\n            \r\n    }\r\n    \r\n}\r\n\r\nTodos.propTypes={\r\n    todos: propTypes.array.isRequired,\r\n    markComplete:propTypes.func.isRequired,\r\n    deleteTodo: propTypes.func.isRequired\r\n\r\n}\r\n\r\nexport default Todos ;","import React from 'react'\r\n\r\n function About() {\r\n  return (\r\n    <React.Fragment>\r\n      <h1>\r\n          About\r\n      </h1>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\n\r\nexport default About;","import React  from 'react';  \nimport { BrowserRouter as Router, Route} from 'react-router-dom'\nimport './App.css';\nimport AddTodo from './components/AddTodo';\nimport Header from './components/layout/header';\nimport Todos from './components/Todos';\nimport About from './components/pages/About';\nimport {v4 as uuid } from 'uuid';\nimport axios from 'axios'\n\nclass App extends React.Component{\n\n    // state={\n    //   todos:[\n    //     {\n    //     id :uuid(),\n    //     title:'Todos title 1',\n    //     completed:false,\n    //   },\n    //   {\n    //     id :uuid(),\n    //     title:'Todos title 2',\n    //     completed:false,\n    //   },\n    //   {\n    //     id :uuid(),\n    //     title:'Todos title 3',\n    //     completed:false,\n    //   },\n    //   {\n    //     id :uuid(),\n    //     title:'Todos title 4',\n    //     completed:true,\n    //   }\n\n    // ]\n    // }\n\n    state= {\n      todos:[]\n    }\n    componentDidMount(){\n      axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10').then(res=> this.setState({todos:res.data}));\n    }\n\n\n    markComplete=(id)=>{\n      \n      this.setState({\n        todos: this.state.todos.map(todo=>{\n          if(todo.id===id){\n            todo.completed = !todo.completed;\n          }\n          return todo;\n        })\n      })\n    }\n\n    deleteTodo=(id) =>{\n      axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`).then(\n        res=>this.setState({ \n          todos:[...this.state.todos.filter(todo=>todo.id !== id)]\n        })\n      )\n      \n    }\n\n    addTodo =(title) =>{\n      \n      // const newTodo={\n      //   id:uuid(),\n      //   completed:false,\n      //   title:title,\n      // }\n      axios.post('https://jsonplaceholder.typicode.com/todos', {\n        title, \n        completed:false\n      }).then(res=>\n      this.setState({\n        todos:[...this.state.todos, res.data]\n      }))\n      // this.setState({\n      //   todos:[...this.state.todos, newTodo]\n      // })\n    }\n\n    render(){\n\n      return (\n\n        <Router>\n        <div style={AppStyle}>\n\n        <Header />   \n\n        <Route exact path='/' render={props=>(\n          <React.Fragment>\n            <div  fxflex=\"\" fxlayout=\"row\" fxlayoutalign=\"start center\" >\n                \n                <AddTodo addTodo={this.addTodo} /> \n\n                <Todos todos={this.state.todos}  markComplete={this.markComplete} \n                deleteTodo={this.deleteTodo}/>\n            \n            </div>\n            \n          </React.Fragment>\n        )} />\n        \n        {/* About Route */}\n\n        <Route path='/about' component={About} />\n        </div>\n        </Router>\n      );\n    }\n \n\n}\n\n\nconst AppStyle ={\n  textAlign: 'center',\n    display: 'flex',\n    flexDirection:' column',\n    width:' 100%',\n    justifyContent:' flex-start'\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}